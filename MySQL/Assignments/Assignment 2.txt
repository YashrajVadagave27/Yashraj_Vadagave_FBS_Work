1) Create the table Member, Books and Issue without any constraints as
mentioned in the schema description above.

CREATE TABLE Member (
    Member_Id INTEGER,
    Member_Name VARCHAR(30),
    Member_Address VARCHAR(50),
    Acc_Open_Date DATE,
    Membership_type VARCHAR(20),
    Fees_paid INTEGER,
    Max_Books_Allowed INTEGER,
    Penalty_Amount DECIMAL(7,2)
);

CREATE TABLE Books (
    Book_No INTEGER,
    Book_Name VARCHAR(30),
    Author_Name VARCHAR(30),
    Cost DECIMAL(7,2),
    Category CHAR(10)
);

CREATE TABLE Issue (
    Lib_Issue_Id INTEGER,
    Book_No INTEGER,
    Member_Id INTEGER,
    Issue_Date DATE,
    Return_Date DATE
);

2) View the structure of the tables.

DESC Member;
DESC Books;
DESC Issue;

3) Drop the Member table

DROP TABLE Member;

4) Create the table Member again as per the schema description with the
following constraints.
a. Member_Id – Primary Key
b. Membership_type - ‘Lifetime’,’ Annual’, ‘Half Yearly’,’ Quarterly’


CREATE TABLE Member (
    Member_Id INTEGER PRIMARY KEY,
    Member_Name VARCHAR(30),
    Member_Address VARCHAR(50),
    Acc_Open_Date DATE,
    Membership_type VARCHAR(20) CHECK (Membership_type IN ('Lifetime','Annual','Half Yearly','Quarterly')),
    Fees_paid INTEGER,
    Max_Books_Allowed INTEGER,
    Penalty_Amount DECIMAL(7,2)
);

5) Modify the table Member increase the width of the member name to 30
characters.

ALTER TABLE Member MODIFY Member_Name VARCHAR(30);

6) Add a column named as Reference of Char(30) to Issue table.

ALTER TABLE Issue ADD Reference CHAR(30);

7) Delete/Drop the column Reference from Issue.

ALTER TABLE Issue DROP COLUMN Reference;

8) Rename the table Issue to Lib_Issue.

ALTER TABLE Issue RENAME TO Lib_Issue;

9) Insert following data in table Member

INSERT INTO Member VALUES
(1,'Richa Sharma','Pune','2005-12-10','Lifetime',25000,5,50),
(2,'Garima Sen','Pune',CURRENT_DATE,'Annual',1000,3,NULL);

10) Insert at least 5 records with suitable data.

INSERT INTO Member VALUES
(3,'Amit Kumar','Mumbai','2006-01-05','Half Yearly',500,2,0),
(4,'Sunita Rao','Delhi','2006-03-15','Quarterly',300,2,20),
(5,'Vikas Patil','Nagpur','2006-07-20','Annual',1200,3,0),
(6,'Neha Mehta','Chennai','2006-11-01','Lifetime',20000,6,100),
(7,'Rohit Sharma','Pune','2007-02-25','Half Yearly',600,2,50);

11) Modify the column Member_name. Decrease the width of the member
name to 20 characters. (If it does not allow state the reason for that)

ALTER TABLE Member MODIFY Member_Name VARCHAR(20);
If not allowed: Error occurs because data already inserted may exceed 20 characters.

12) Try to insert a record with Max_Books_Allowed = 110, Observe the
error that comes.

INSERT INTO Member 
VALUES (8,'Yash Vadagave','Goa','2007-05-01','Annual',800,110,0);

13) Generate another table named Member101 using a Create command
along with a simple SQL query on member table.

CREATE TABLE Member101 AS SELECT * FROM Member;

14) Add the constraints on columns max_books_allowed and penalty_amt
as follows
a. max_books_allowed < 100
b. penalty_amt maximum 1000
Also give names to the constraints.

ALTER TABLE Member
ADD CONSTRAINT chk_books_allowed CHECK (Max_Books_Allowed < 100),
ADD CONSTRAINT chk_penalty CHECK (Penalty_Amount <= 1000);

If not work if there is record for above update column is >=100 and >1000 is present 

DELETE FROM Member WHERE Max_Books_Allowed >= 100;

ALTER TABLE Member
ADD CONSTRAINT chk_books_allowed CHECK (Max_Books_Allowed < 100),
ADD CONSTRAINT chk_penalty CHECK (Penalty_Amount <= 1000);
 

15) Drop the table books.

DROP TABLE Books;


16) Create table Books again as per the schema description with the
following constraints.
a. Book_No – Primary Key
b. Book_Name – Not Null
c. Category – System, Fiction, Database, RDBMS, Others.

CREATE TABLE Books (
    Book_No INTEGER PRIMARY KEY,
    Book_Name VARCHAR(30) NOT NULL,
    Author_Name VARCHAR(30),
    Cost DECIMAL(7,2),
    Category VARCHAR(20) CHECK (Category IN ('System','Fiction','Database','RDBMS','Others'))
);


17) Insert data in Book table as follows:

INSERT INTO Books VALUES (101,'Let us C','Denis Ritchie',450,'System');
INSERT INTO Books VALUES (102,'Oracle – Complete Ref','Loni',550,'Database');
INSERT INTO Books VALUES (103,'Mastering SQL','Loni',250,'Database');
INSERT INTO Books VALUES (104,'PL SQL-Ref','Scott Urman',750,'Database');


18) Insert more records in Book table.

INSERT INTO Books VALUES (106,'DBMS Concepts','Korth',900,'Database');
INSERT INTO Books VALUES (107,'Operating System','Galvin',800,'System');
INSERT INTO Books VALUES (108,'Harry Potter','J.K. Rowling',600,'Fiction');

19) View the data in the tables using simple SQL query.

SELECT * FROM Member;
SELECT * FROM Books;
SELECT * FROM Lib_Issue;

20) Insert into Book following data.

INSERT INTO Books VALUES (105,'National Geographic','Adis Scott',1000,'Science');

Here Science is not allowed so it will show error. to correct it write below query

INSERT INTO Books 
VALUES (105,'National Geographic','Adis Scott',1000,'Others');


21) Rename the table Lib_Issue to Issue.

ALTER TABLE Lib_Issue RENAME TO Issue;

22) Drop table Issue.

DROP TABLE Issue;

23) As per the given structure Create table Issue again with following
constraints.

 Lib_Issue_Id-Primary key
 Book_No- foreign key
 Member_id - foreign key
 Issue_date
 Return_date

CREATE TABLE Issue (
    Lib_Issue_Id INTEGER PRIMARY KEY,
    Book_No INTEGER,
    Member_Id INTEGER,
    Issue_Date DATE,
    Return_Date DATE,
    FOREIGN KEY (Book_No) REFERENCES Books(Book_No),
    FOREIGN KEY (Member_Id) REFERENCES Member(Member_Id)
);

24) Insert following data into Issue table.

INSERT INTO Issue VALUES (7001,101,1,'2006-12-10',NULL);
INSERT INTO Issue VALUES (7002,102,2,'2006-12-25',NULL);
INSERT INTO Issue VALUES (7003,104,1,'2006-01-15',NULL);
INSERT INTO Issue VALUES (7004,101,1,'2006-07-04',NULL);
INSERT INTO Issue VALUES (7005,104,2,'2006-11-15',NULL);
INSERT INTO Issue VALUES (7006,101,3,'2006-02-18',NULL);

25) Remove the constraints on Issue table

ALTER TABLE Issue DROP FOREIGN KEY Book_No;
ALTER TABLE Issue DROP FOREIGN KEY Member_Id;
ALTER TABLE Issue DROP PRIMARY KEY;

26) Insert a record in Issue table. The member_id should not exist in

member table.

INSERT INTO Issue VALUES (7007,101,99,'2006-08-20',NULL);

27) Now enable the constraints of Issue table. Observe the error

ALTER TABLE Issue
ADD CONSTRAINT pk_issue PRIMARY KEY (Lib_Issue_Id),
ADD CONSTRAINT fk_issue_book FOREIGN KEY (Book_No) REFERENCES Books(Book_No),
ADD CONSTRAINT fk_issue_member FOREIGN KEY (Member_Id) REFERENCES Member(Member_Id);

To Fix error:

DELETE FROM Issue WHERE Member_Id NOT IN (SELECT Member_Id FROM Member);

ALTER TABLE Issue
ADD CONSTRAINT pk_issue PRIMARY KEY (Lib_Issue_Id),
ADD CONSTRAINT fk_issue_book FOREIGN KEY (Book_No) REFERENCES Books(Book_No),
ADD CONSTRAINT fk_issue_member FOREIGN KEY (Member_Id) REFERENCES Member(Member_Id);


28) Delete the record inserted at Q-27) and enable the constraints.

DELETE FROM Issue WHERE Member_Id=99;
ALTER TABLE Issue
ADD FOREIGN KEY (Book_No) REFERENCES Books(Book_No),
ADD FOREIGN KEY (Member_Id) REFERENCES Member(Member_Id);


29) Try to delete the record of member id 1 from member table and

observe the error .

DELETE FROM Member WHERE Member_Id=1;
Error: because records exist in Issue referencing this member.

30) View the data and structure of all the three tables Member,

Issue, Book.

DESC Member;
DESC Books;
DESC Issue;

SELECT * FROM Member;
SELECT * FROM Books;
SELECT * FROM Issue;

31) Modify the Return_Date of 7004,7005 to 15 days after the

Issue_date.

UPDATE Issue 
SET Return_Date = DATE_ADD(Issue_Date, INTERVAL 15 DAY)
WHERE Lib_Issue_Id IN (7004,7005);

32) Remove all the records from Issue table where member_ID is 1

and Issue date in before 10-Dec-06.

DELETE FROM Issue 
WHERE Member_Id=1 AND Issue_Date < '2006-12-10';

33) Remove all the records from Book table with category other

than RDBMS and Database.

DELETE FROM Books 
WHERE Category NOT IN ('Database','RDBMS');

34) Remove the table Member.

DROP TABLE Member;

35) Remove the table Book.

DROP TABLE Books;