Name : Yashraj Dattatray VADAGAVE
Batch : July 2025 (Java Full Stack [Online])
FRN No : FRN-14J0725/010

Assignment 5

Q1.	
SELECT * FROM Books
WHERE Author_name = 'Loni' AND Cost < 600;

Q2.
SELECT * FROM Issue
WHERE Return_date IS NULL;

Q3.
UPDATE Issue
SET Return_date = '31-DEC-2006'
WHERE (Return_date IS NULL OR Return_date = '')
AND Lib_Issue_Id NOT IN (7005, 7006);

Q4.
SELECT * FROM Issue
WHERE (Return_date - Issue_date) > 30;

Q5.
SELECT * FROM Books
WHERE Cost BETWEEN 500 AND 750 AND Category = 'Database';

Q6.
SELECT * FROM Books
WHERE Category IN ('Science', 'Database', 'Fiction', 'Management');

Q7.
SELECT * FROM Member
ORDER BY Penalty_Amount DESC;

Q8.
UPDATE Books
SET Cost = 300, Category = 'RDBMS'
WHERE Book_No = 103;

Q9.
SELECT * FROM Books
ORDER BY Category ASC, Cost DESC;

Q10.
SELECT * FROM Books
WHERE Book_name LIKE '%SQL%';

Q11.
SELECT Lib_Issue_Id, Issue_Date, Return_date,
       (Return_date - Issue_date) AS No_of_days
FROM Issue;

Q12.
SELECT * FROM Member
ORDER BY Acc_Open_Date;

Q13.
SELECT COUNT(*) AS Total_Issued
FROM Issue
WHERE Member_Id = 101;

Q14.
SELECT SUM(Penalty_Amount) AS Total_Penalty
FROM Member;

Q15.
SELECT COUNT(*) AS Total_Members
FROM Member;

Q16.
SELECT COUNT(*) AS Total_Issued_Books
FROM Issue;

Q17.
SELECT AVG(Fees_paid) AS Avg_Fees
FROM Member;

Q18.
SELECT Category, COUNT(*) AS Book_Count
FROM Books
GROUP BY Category;

Q19.
SELECT Book_No, COUNT(*) AS Issue_Count
FROM Issue
GROUP BY Book_No
ORDER BY Issue_Count DESC;

Q20.
SELECT MAX(Penalty_Amount) AS Max_Penalty,
       MIN(Penalty_Amount) AS Min_Penalty,
       SUM(Penalty_Amount) AS Total_Penalty,
       AVG(Penalty_Amount) AS Avg_Penalty
FROM Member;

Q21.
SELECT Member_Id, COUNT(*) AS No_of_Books
FROM Issue
GROUP BY Member_Id
HAVING COUNT(*) > 2;

Q22.
SELECT Member_Id, Book_No, COUNT(*) AS Issue_Count
FROM Issue
GROUP BY Member_Id, Book_No
ORDER BY Issue_Count DESC;

Q23.
SELECT MONTH(Issue_Date) AS Month, COUNT(*) AS No_of_Books
FROM Issue
GROUP BY MONTH(Issue_Date)
ORDER BY No_of_Books DESC;

Q24.
SELECT Book_No, Book_name
FROM Books
WHERE Book_No NOT IN (SELECT Book_No FROM Issue);

Q25.
SELECT DISTINCT Member_Id
FROM Member
WHERE Member_Id IN (SELECT Member_Id FROM Issue);

Q26.
SELECT 
    i.Member_Id,
    COUNT(*) AS Books_Issued,
    (SELECT MAX(BookCount)
     FROM (SELECT COUNT(*) AS BookCount FROM Issue GROUP BY Member_Id) AS T) AS Highest_Issue_Count,
    (SELECT MIN(BookCount)
     FROM (SELECT COUNT(*) AS BookCount FROM Issue GROUP BY Member_Id) AS T) AS Lowest_Issue_Count
FROM Issue i
GROUP BY i.Member_Id;

Q27.
SELECT *
FROM Issue
WHERE MONTHNAME(Issue_Date) IN ('December', 'July');

Q28.
SELECT B.Book_No, B.Book_Name, I.Issue_Date
FROM Books B
JOIN Issue I ON B.Book_No = I.Book_No
WHERE MONTHNAME(I.Issue_Date) = 'December'
AND B.Category = 'Database';

Q29.
SELECT Member_Id, Member_Name, Max_Books_Allowed
FROM Member
ORDER BY Max_Books_Allowed DESC;

Q30.
SELECT B.Book_No, B.Book_Name, I.Issue_Date, I.Return_Date
FROM Books B
JOIN Issue I ON B.Book_No = I.Book_No
JOIN Member M ON I.Member_Id = M.Member_Id
WHERE M.Member_Name = 'Richa Sharma';

Q31.
SELECT DISTINCT M.*
FROM Member M
JOIN Issue I ON M.Member_Id = I.Member_Id
JOIN Books B ON I.Book_No = B.Book_No
WHERE B.Category = 'Database';

Q32.
SELECT *
FROM Books B1
WHERE Cost = (
    SELECT MAX(B2.Cost)
    FROM Books B2
    WHERE B2.Category = B1.Category
);

Q33.
SELECT I.*
FROM Issue I
JOIN Member M ON I.Member_Id = M.Member_Id
WHERE I.Issue_Date NOT BETWEEN M.Acc_Open_Date AND I.Return_Date;

Q34.
SELECT M.*
FROM Member M
WHERE M.Member_Id NOT IN (SELECT Member_Id FROM Issue);

Q35.
SELECT DISTINCT M.Member_Name
FROM Member M
JOIN Issue I ON M.Member_Id = I.Member_Id
WHERE I.Book_No IN (
    SELECT I2.Book_No
    FROM Issue I2
    JOIN Member M2 ON I2.Member_Id = M2.Member_Id
    WHERE M2.Member_Name = 'Garima'
)

Q36.
SELECT B.Book_Name, B.Cost
FROM Books B
JOIN Issue I ON B.Book_No = I.Book_No
WHERE I.Return_Date - I.Issue_Date > 30;

Q37.
SELECT Author_Name, Book_Name, COUNT(*) AS No_of_Books
FROM Books
GROUP BY Author_Name
HAVING COUNT(*) > 1;

Q38.
SELECT Member_Id, Member_Name
FROM Member
WHERE Member_Id IN (
    SELECT Member_Id FROM Issue
    GROUP BY Member_Id
    HAVING COUNT(*) = (SELECT MAX(COUNT(*)) FROM Issue GROUP BY Member_Id)
       OR COUNT(*) = (SELECT MIN(COUNT(*)) FROM Issue GROUP BY Member_Id)
);

Q39.
SELECT *
FROM Books
ORDER BY Cost DESC
LIMIT 3;

Q40.
SELECT SUM(B.Cost) AS Total_Issued_Cost
FROM Books B
JOIN Issue I ON B.Book_No = I.Book_No
WHERE I.Return_Date IS NULL;

Q41.
SELECT B.*
FROM Books B
JOIN Issue I ON B.Book_No = I.Book_No
GROUP BY B.Book_No, B.Book_Name, B.Author, B.Cost, B.Publisher  -- include all book columns
ORDER BY COUNT(I.Book_No) DESC
LIMIT 1;

Q42.
SELECT COUNT(*) AS Total_Issued_To_Lifetime
FROM Issue I
JOIN Member M ON I.Member_Id = M.Member_Id
WHERE M.Membership_Type = 'Lifetime';

Q43.
SELECT Membership_Type, COUNT(*) AS Total_Members
FROM Member
GROUP BY Membership_Type;

Q44.
SELECT *
FROM Member
ORDER BY Acc_Open_Date
LIMIT 5;

Q45.
SELECT DISTINCT M.Member_Name, M.Membership_Type
FROM Member M
JOIN Issue I ON M.Member_Id = I.Member_Id
WHERE I.Issue_Date BETWEEN '2022-12-01' AND '2022-12-31';

Q46.
SELECT DISTINCT M.*
FROM Member M
JOIN Issue I ON M.Member_Id = I.Member_Id
WHERE I.Return_Date IS NULL;

Q47.
SELECT *
FROM Member
WHERE Acc_Open_Date = (
    SELECT Acc_Open_Date FROM Member WHERE Member_Name = 'Garima'
);

Q48.
SELECT DISTINCT M.*
FROM Member M
JOIN Issue I ON M.Member_Id = I.Member_Id
JOIN Books B ON I.Book_No = B.Book_No
WHERE B.Author_Name = 'Loni' AND MONTHNAME(I.Issue_Date) = 'December';

Q49.
SELECT B.Author_Name
FROM Books B
JOIN Issue I ON B.Book_No = I.Book_No
JOIN Member M ON I.Member_Id = M.Member_Id
WHERE M.Membership_Type = 'Lifetime'
GROUP BY B.Author_Name
ORDER BY COUNT(*) ASC
LIMIT 1;

Q50.
SELECT M.Member_Name
FROM Member M
JOIN Issue I ON M.Member_Id = I.Member_Id
JOIN Books B ON I.Book_No = B.Book_No
WHERE B.Cost > 300 AND B.Author_Name = 'Scott Urman';

Q51.
SELECT M.Member_Name
FROM Member M
JOIN Issue I ON M.Member_Id = I.Member_Id
WHERE M.Membership_Type = 'Lifetime'
AND M.Acc_Open_Date BETWEEN '2006-01-01' AND '2006-12-31'
GROUP BY M.Member_Name
HAVING COUNT(I.Book_No) = 1;

Q52.
UPDATE Member
SET Penalty_Amount = 100
WHERE Member_Name = 'Garima Sen';




